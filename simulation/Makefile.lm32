CPU = LM32
TEST_NAME = none
TEST_CASE = $(basename $(TEST_NAME))
TEST_CASE_SRC = $(TEST_CASE).c
TEST_CASE_OBJ = $(TEST_CASE).o
ELF_REQUIREMENTS = $(TEST_CASE_OBJ) 
ELF_FILE  = $(TEST_CASE).elf
LIST_FILE = $(TEST_CASE)_$(CPU).lst
VH_FILE = $(TEST_CASE).vh
ENTRY_POINT = ../firmware/$(CPU)/boot/objects/crt.o

FIRMWARE_ROOT = ../firmware
FIRMWARE_CPU_ROOT = $(FIRMWARE_ROOT)/$(CPU)
LIB_BOOT = lm32boot
LIB_BOOT_DIR = $(FIRMWARE_CPU_ROOT)/boot/lib

DEVICE_DRIVERS_DIR     = $(FIRMWARE_ROOT)/device_drivers
DEVICE_DRIVERS_INC_DIR = $(DEVICE_DRIVERS_DIR)/includes
DEVICE_DRIVERS_LIB_DIR = $(DEVICE_DRIVERS_DIR)/LM32_lib/
DEVICE_DRIVERS_LIB = LM32_device_drivers

BOOT_DIR = $(FIRMWARE_ROOT)/$(CPU)/boot
BOOT_INC_DIR = $(BOOT_DIR)/includes
BOOT_LIB_DIR = $(BOOT_DIR)/lib
BOOT_LIB     = LM32boot

CINCLUDES = -I /home/ptracton/Downloads/gtools/lm32/lm32-elf/include/ -I $(DEVICE_DRIVERS_INC_DIR) -I $(BOOT_INC_DIR)
CFLAGS += $(CINCLUDES) -g -D$(CPU)  -Wall -Werror -Wextra -std=gnu99 -fno-builtin -fomit-frame-pointer -ffunction-sections
LD_FLAGS = -nostdlib -nodefaultlibs -T$(FIRMWARE_CPU_ROOT)/linker/linker.ld -L $(DEVICE_DRIVERS_LIB_DIR) -l$(DEVICE_DRIVERS_LIB) -L $(BOOT_LIB_DIR) -l$(BOOT_LIB) -lgcc -lgloss -lnosys -lc 

include $(FIRMWARE_CPU_ROOT)/environment.mk

all: $(LIST_FILE) $(VH_FILE)

$(LIST_FILE): $(ELF_FILE)
	@echo "List File: $(LIST_FILE)"
	@$(OBJDUMP) -xStsd $(ELF_FILE) > $(LIST_FILE)

$(ELF_FILE): $(ELF_REQUIREMENTS)
	@$(MAKE) -C ../firmware/device_drivers CPU=LM32
	@$(MAKE) -C ../firmware/$(CPU)/boot/
	@echo "Linking $(ELF_FILE)"
	$(LD) -o $(ELF_FILE) $(ENTRY_POINT)  $(ELF_REQUIREMENTS)  $(LD_FLAGS) 

%.vh: %.elf
	@$(OBJCOPY) -O srec $< $@.tmp
	@srec_cat $@.tmp --output $@.mem --VMEM


%.o:%.c
	@echo "Compiling  $<"
	$(CC) $(CFLAGS) -o $@ -c $< -MMD -MF $(*F).d

clean:
	$(RM) -f $(ELF_FILE) $(TARGET).d $(LIST_FILE) $(TEST_CASE_OBJ) *.bin  *~
	@$(MAKE) -C ../firmware/device_drivers CPU=LM32 clean
	@$(MAKE) -C ../firmware/$(CPU)/boot/ clean
