CPU = lm32
TEST_NAME = none
TEST_CASE = $(basename $(TEST_NAME))
TEST_CASE_SRC = $(TEST_CASE).c
TEST_CASE_OBJ = $(TEST_CASE).o
ELF_REQUIREMENTS = $(TEST_CASE_OBJ) 
ELF_FILE  = $(TEST_CASE).elf
LIST_FILE = $(TEST_CASE).lst
VH_FILE = $(TEST_CASE).vh
ENTRY_POINT = ../firmware/lm32/boot/objects/crt.o

FIRMWARE_ROOT = ../firmware
FIRMWARE_CPU_ROOT = $(FIRMWARE_ROOT)/$(CPU)
LIB_BOOT = lm32boot
LIB_BOOT_DIR = $(FIRMWARE_CPU_ROOT)/boot/lib

CINCLUDES = -I /home/ptracton/Downloads/gtools/lm32/lm32-elf/include/
CFLAGS += $(CINCLUDES) -g -Wall -Werror -Wextra 
LD_FLAGS = -T$(FIRMWARE_CPU_ROOT)/linker/linker.ld  -lgcc 

include $(FIRMWARE_CPU_ROOT)/environment.mk

all: $(LIST_FILE) $(VH_FILE)

$(LIST_FILE): $(ELF_FILE)
	@echo "List File: $(LIST_FILE)"
	@$(OBJDUMP) -d $(ELF_FILE) > $(LIST_FILE)

$(ELF_FILE): $(ELF_REQUIREMENTS)
	@$(MAKE) -C ../firmware/lm32/boot/
	@echo "Linking $(ELF_FILE)"
	$(LD) -o $(ELF_FILE) $(LD_FLAGS) $(ENTRY_POINT)  $(ELF_REQUIREMENTS) 

%.vh: %.elf
	@$(OBJCOPY) -O srec $< $@.tmp
	srec_cat $@.tmp --output $@.mem --VMEM


%.o:%.c
	@echo "Compiling  $<"
	$(CC) $(CFLAGS) -o $@ -c $< -MMD -MF $(*F).d

clean:
	$(RM) -f $(ELF_FILE) $(TARGET).d $(LIST_FILE) $(TEST_CASE_OBJ) *.bin  *~
